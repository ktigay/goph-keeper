// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ktigay/goph-keeper/internal/server/handler/grpc (interfaces: JWTWrapper)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/ktigay/goph-keeper/internal/entity"
)

// MockJWTWrapper is a mock of JWTWrapper interface.
type MockJWTWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockJWTWrapperMockRecorder
}

// MockJWTWrapperMockRecorder is the mock recorder for MockJWTWrapper.
type MockJWTWrapperMockRecorder struct {
	mock *MockJWTWrapper
}

// NewMockJWTWrapper creates a new mock instance.
func NewMockJWTWrapper(ctrl *gomock.Controller) *MockJWTWrapper {
	mock := &MockJWTWrapper{ctrl: ctrl}
	mock.recorder = &MockJWTWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTWrapper) EXPECT() *MockJWTWrapperMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockJWTWrapper) GenerateToken(arg0 entity.Identity) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockJWTWrapperMockRecorder) GenerateToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockJWTWrapper)(nil).GenerateToken), arg0)
}

// ParseToken mocks base method.
func (m *MockJWTWrapper) ParseToken(arg0 string) (*entity.Identity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseToken", arg0)
	ret0, _ := ret[0].(*entity.Identity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseToken indicates an expected call of ParseToken.
func (mr *MockJWTWrapperMockRecorder) ParseToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseToken", reflect.TypeOf((*MockJWTWrapper)(nil).ParseToken), arg0)
}
